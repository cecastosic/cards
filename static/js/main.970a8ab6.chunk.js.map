{"version":3,"sources":["components/Card.tsx","components/Header.tsx","components/Pagination.tsx","hooks/useFetch.ts","hooks/useDebounce.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","data","className","src","imagePath","alt","description","title","Header","value","setSearchQuery","type","name","placeholder","onChange","e","target","autoFocus","ArrowIconNext","xmlns","height","width","d","fill","ArrowIconPrevious","Pagination","totalItems","itemsPerPage","currentPage","onPageChange","useState","current","setCurrent","countPages","Math","ceil","pages","i","push","role","onClick","map","page","index","baseUrl","useFetch","path","Error","url","console","log","useSwr","error","useDebounce","delay","debouncedValue","setDebouncedValue","useEffect","timer","setTimeout","clearTimeout","App","searchQuery","debouncedQuery","cards","setCards","setTotalItems","setCurrentPage","allCards","filteredCards","filter","card","toLowerCase","includes","length","pageNumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","fetcher","input","init","a","fetch","res","json","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.970a8ab6.chunk.js","sourcesContent":["export type CardData = {\n  title: string;\n  description: string;\n  imagePath: string;\n};\n\ntype CardProps = {\n  data: CardData;\n};\nexport const Card = ({ data }: CardProps) => {\n  return (\n    <div className=\"card\" key={data.title}>\n      <div className=\"image\">\n        <img src={data.imagePath} alt={data.description} />\n      </div>\n    </div>\n  );\n};\n","export const Header = ({\n  value,\n  setSearchQuery,\n}: {\n  value: string;\n  setSearchQuery: React.Dispatch<React.SetStateAction<string>>;\n}): JSX.Element => {\n  return (\n    <header>\n      <h1>Cards</h1>\n      <div className=\"search\">\n        <input\n          type=\"text\"\n          name=\"search\"\n          placeholder=\"Search for a card\"\n          value={value}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          autoFocus\n        />\n      </div>\n    </header>\n  );\n};\n","import React, { useState } from \"react\";\n\nconst ArrowIconNext = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"24\"\n      width=\"24\"\n      className=\"inline-block\"\n    >\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n      <path\n        d=\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n        fill=\"#fff\"\n      />\n    </svg>\n  );\n};\n\nconst ArrowIconPrevious = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"24\"\n      width=\"24\"\n      className=\"inline-block\"\n    >\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n      <path\n        d=\"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\"\n        fill=\"#fff\"\n      />\n    </svg>\n  );\n};\n\nexport const Pagination = ({\n  totalItems,\n  itemsPerPage = 8,\n  currentPage = 1,\n  onPageChange,\n}: {\n  totalItems: number;\n  itemsPerPage?: number;\n  currentPage?: number;\n  onPageChange: (pageNumber: number) => void;\n}) => {\n  const [current, setCurrent] = useState(currentPage);\n  const countPages: number = Math.ceil(totalItems / itemsPerPage);\n\n  const pages: number[] = [];\n  for (let i = 1; i <= countPages; i++) {\n    pages.push(i);\n  }\n  return (\n    <nav\n      className=\"paginate-container\"\n      role=\"navigation\"\n      aria-label=\"Pagination Navigation\"\n    >\n      <ul className=\"pagination\">\n        <li>\n          {current === 1 ? (\n            <span className=\"disable\">\n              <ArrowIconPrevious />\n            </span>\n          ) : (\n            <span\n              onClick={() => {\n                setCurrent(current - 1);\n                onPageChange(current - 1);\n              }}\n              role=\"link\"\n            >\n              <ArrowIconPrevious />\n            </span>\n          )}\n        </li>\n        {pages.map((page, index) => {\n          return (\n            <li\n              key={index}\n              className={current - 1 === index ? \"current-page\" : \"\"}\n            >\n              <span\n                onClick={() => {\n                  setCurrent(index + 1);\n                  onPageChange(index + 1);\n                }}\n                role=\"link\"\n              >\n                {page}\n              </span>\n            </li>\n          );\n        })}\n        <li>\n          {current === countPages ? (\n            <span className=\"disable\">\n              <ArrowIconNext />\n            </span>\n          ) : (\n            <span\n              onClick={() => {\n                setCurrent(current + 1);\n                onPageChange(current + 1);\n              }}\n              role=\"link\"\n            >\n              <ArrowIconNext />\n            </span>\n          )}\n        </li>\n      </ul>\n      <p>\n        Showing {(current - 1) * itemsPerPage + 1}-\n        {itemsPerPage * current > totalItems\n          ? totalItems\n          : itemsPerPage * current}{\" \"}\n        of {totalItems}\n      </p>\n    </nav>\n  );\n};\n","import useSwr from \"swr\";\n\nconst baseUrl = \"http://localhost:3000\";\n\nexport const useFetch = (\n  path: string,\n  name?: string\n): {\n  data: any;\n  error: any;\n} => {\n  if (!path) {\n    throw new Error(\"Path is required\");\n  }\n\n  const url: string = name ? baseUrl + path + \"/\" + name : baseUrl + path;\n  console.log(url);\n  const { data, error } = useSwr(url);\n\n  return { data, error };\n};\n","import { useEffect, useState } from \"react\";\n\nfunction useDebounce<T>(value: T, delay?: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setDebouncedValue(value), delay || 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\nexport default useDebounce;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Card, CardData } from \"./components/Card\";\nimport { Header } from \"./components/Header\";\nimport { Pagination } from \"./components/Pagination\";\nimport { useFetch } from \"./hooks/useFetch\";\nimport useDebounce from \"./hooks/useDebounce\";\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n  const debouncedQuery = useDebounce<string>(searchQuery, 500);\n  const [cards, setCards] = useState<CardData[] | null>(null);\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n\n  const { data: allCards } = useFetch(\"/cards\");\n  const { data } = useFetch(`/cards?_page=${currentPage}&_limit=8`);\n\n  console.log(currentPage);\n\n  useEffect(() => {\n    if (debouncedQuery !== \"\") {\n      const filteredCards: CardData[] = allCards.filter((card: CardData) =>\n        card.title.toLowerCase().includes(debouncedQuery.toLowerCase())\n      );\n      setCards(filteredCards);\n    }\n    if (debouncedQuery === \"\") setCards(null);\n  }, [debouncedQuery, allCards]);\n\n  useEffect(() => {\n    if (allCards) {\n      setTotalItems(allCards.length);\n    }\n  }, [allCards]);\n\n  if (cards) {\n    return (\n      <div className=\"app\">\n        <Header value={searchQuery} setSearchQuery={setSearchQuery} />\n        <div className=\"container\">\n          {cards.length > 0 ? (\n            cards.map((card: CardData) => {\n              return <Card data={card} key={card.imagePath} />;\n            })\n          ) : (\n            <p>No card matches the search criteria</p>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"app\">\n      <Header value={searchQuery} setSearchQuery={setSearchQuery} />\n      <div className=\"container\" role=\"main\">\n        {data && data.length > 0 ? (\n          <>\n            {data.map((card: CardData) => {\n              return <Card data={card} key={card.imagePath} />;\n            })}\n            <Pagination\n              totalItems={totalItems}\n              onPageChange={(pageNumber) => setCurrentPage(pageNumber)}\n              currentPage={currentPage}\n            />\n          </>\n        ) : (\n          <p>No cards</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { SWRConfig } from \"swr\";\n\nconst fetcher = async (input: RequestInfo, init: RequestInit) => {\n  const res = await fetch(input, init);\n  return res.json();\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <SWRConfig value={{ fetcher }}>\n      <App />\n    </SWRConfig>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}